FILES
=====

flash.sh                    Flash script. JTAG.
boot.bif                    Boot image description
version.bin                 Boot image version. Written into last 64 kb of
                            flash by flash.sh
                            See VERSION FORMAT for more info.
BOOT.bin                    Generated by bootgen, called from flash.sh.
FSBL.elf                    Generated by Xilinx SDK.
elink2_top_wrapper.bit      Bitstream generated by Xilinx Vivado.
uboot.elf                   U-boot image.


VERSION FORMAT
==============

Little endian

struct {
    u32 version; /* Running number starting with 1 */
    u32 magic;   /* 0x13371338 */
} __attribute__((packed));


PROCEDURE
=========

1. Download flash git repository
2. Build U-BOOT
3. Build bitstream in Xilinx Vivado and export hardware
4. Generate FSBL in Xilinx SDK
5. Increment version number in version.bin with your favorite hex editor
6. Run flash.sh


1. Download flash git repository
================================
$ git clone https://github.com/olajep/parallella-flash


2. Build U-BOOT
===============

$ git clone https://github.com/parallella/parallella-uboot --branch parallella-next
$ cd parallella-uboot
$ make adapteva_parallella_defconfig
$ make
$ cp u-boot path/to/parallella-flash/u-boot.elf

3. Build bitstream in Xilinx Vivado and export hardware
=======================================================

Start Vivado
Load elink project
Build the bitstream for the FPGA on the board you want to flash
Copy the bitstream to path.to/parallella-flash/elink2_top_wrapper.bit

File->Export->Export hardware
File->Launch SDK
Point it to the directory where you exported the hardware
Xilinx SDK starts.


4. Generate FSBL in Xilinx SDK
==============================

File->New->Application Project
Set name to FSBL
Press next
Select the Zynq FSBL template
Press finish
Copy FSBL/Debug/FSBL.elf to path/to/parallella-flash

5. Increment version number in version.bin with your favorite hex editor
========================================================================


6. Run flash.sh
===============

You need a JTAG cable and installed drivers for this.
You might need to run the flash script twice.

